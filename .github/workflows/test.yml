name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  unit-tests:
    name: Unit & Integration Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run type check
        run: npm run typecheck

      - name: Run unit tests
        run: npm run test:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella

      - name: Generate coverage badge
        if: matrix.node-version == '20.x'
        run: |
          npm install -g coverage-badge-creator
          coverage-badge-creator

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build application
        run: npm run build

      - name: Run E2E tests
        run: npm run test:e2e

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: test-results/
          retention-days: 30

  coverage-check:
    name: Coverage Threshold Check
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check coverage thresholds
        run: |
          npm run test:coverage
          node -e "
            const coverage = require('./coverage/coverage-summary.json');
            const total = coverage.total;

            const thresholds = { statements: 80, branches: 75, functions: 80, lines: 80 };
            let failed = false;

            Object.entries(thresholds).forEach(([key, threshold]) => {
              const actual = total[key].pct;
              if (actual < threshold) {
                console.error(\`❌ ${key} coverage (${actual}%) below threshold (${threshold}%)\`);
                failed = true;
              } else {
                console.log(\`✅ ${key} coverage (${actual}%) meets threshold (${threshold}%)\`);
              }
            });

            if (failed) process.exit(1);
          "

  security-tests:
    name: Security Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Run dependency check
        run: |
          npm install -g snyk
          snyk test --severity-threshold=high || true
